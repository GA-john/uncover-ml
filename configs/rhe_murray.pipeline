# vi:syntax=python

from os import path


#
# Path Settings
#

# Location of data
data_dir = "/nas/active/ops/nat_cov/Murray_Basin"

# Location of processed files (features, predictions etc)
proc_dir = path.join(data_dir, "processed")

# Location of the prediction output from this script
pred_dir = path.join(proc_dir, "prediction")


#
# Target Settings
#

# Shape file with target variable info
target_file = "Targets_V_final_inside.shp"

# Target variable name (in shape file)
target_var = "depth"

# Where to save processed targets
target_hdf = path.join(proc_dir, "{}_{}.hdf5"
                       .format(path.splitext(target_file)[0], target_var))

folds = 5


#
# Feature settings
#

# Allows deternministic cross-val. Set to None for a random seed
crossval_seed = 1

# Automatically detect integer-valued files and use one-hot encoding?
onehot = False

# Patch size to extract around targets (0 = 1x1 pixel, 1 = 3x3 pixels etc)
patchsize = 0

# Impute missing values?
impute = True

# Starndardise each input dimension? (0 mean, 1 std)
standardise = True  # standardise all of the extracted features?

# Whiten all inputs?
whiten = False  # whiten all of the extracted features?

# Fraction of dimensions to keep *if* whitening
pca_frac = 0.5

# Composite feature names (prefixes)
compos_file = "composite"


#
# Algorithm settings
#

# Iterate through this dictionary of algorithm name and arguments:
algdict = {

    # Bayesian linear regression
    # "bayesreg": {},

    # Approximate Gaussian process, for large scale data
    # "approxgp": {'kern': 'matern52', 'lenscale': [100.] * 87, 'nbases': 50},
    # "approxgp": {'kern': 'rbf', 'lenscale': 100., 'nbases': 50},

    # Support vector machine (regressor)
    # "svr": {'gamma': 1. / 300, 'epsilon': 0.05},
    # "svr": {},

    # Random forest regressor
    "randomforest": {'n_estimators': 500},

    # ARD Linear regression
    # "ardregression": {},

    # Kernel ridge regression
    # 'kernelridge': {'kernel': 'rbf'},

    # Decision tree regressor
    # 'decisiontree': {},

    # Extra tree regressor
    # 'extratree': {},
}

#
# Prediction settings
#

# Name of the prediction algorithm
# algorithm = 'svr'
# algorithm = 'bayesreg'
# algorithm = 'approxgp'
algorithm = 'randomforest'

# Prediction file names (prefix)
predict_file = "prediction"

# Quantiles
quantiles = 0.95


#
# Visualisation/Geotiff settings
#

# Name of the prediction output tif
gtiffname = "prediction_image"
gtiffname_ent = "entropy_reduction_image"

# Make the image RGB?
makergbtif = True


# Prediction file names (prefix)
predict_file = "prediction_file"

# Output suffix files for validation metrics
valoutput = "validation"

