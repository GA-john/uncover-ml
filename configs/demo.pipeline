# vi:syntax=python

from os import path


#
# Path Settings
#

# As this is set now, it assumes a folder structure like the following:
# ~/data/GA-cover   << location of data (all tif and shp files)
# ~/data/GA-cover/processed     << location of all output files
# ~/data/GA-cover/soilcrossvalindices.hdf5   << cross val hdf5 file from us

# please change the following paths to suit your needs

# Location of data
root_dir = path.join(path.expanduser("~"), "data/GA-cover")
# data_dir = path.join(path.expanduser("~"), "data/GA-depth")
# data_dir = "/short/ge3/jrw547/Murray_datasets"
# data_dir = "/short/ge3/jrw547/GA-cover"

# Location of outputs
output_dir = "."


# Shape file with target variable info
target_file = path.join(root_dir, "geochem_sites.shp")
# target_file = "drillhole_confid_3.shp"
# target_file = "Targets_V8.shp"

# Target variable name (in shape file)
target_var = "Na_ppm_i_1"  # "Cr_ppm_i_1"
# target_var = "depth"

export_targets = True


# Crossval settings

cross_validate = True
folds = 5
crossval_seed = 1

#
# Feature settings
#

rank_features = False

features_cts = {"path": root_dir,
              "onehot": False,
              "patchsize": 0,
              "impute": True,
              "transform": 'standardise',
              "pca_frac": 0.5,
              }

features_disc = {"path": path.join(root_dir, "cat_datasets"),
                 "onehot": False,
                 "patchsize": 0,
                 "impute": True,
                 "transform": 'standardise',
                 "pca_frac": 0.5,
                }


# feature_sets = [features_cts, features_disc]
feature_sets = [features_disc]


#
# Algorithm settings
#

# Iterate through this dictionary of algorithm name and arguments:
algdict = {

    # Bayesian linear regression
    # "bayesreg": {'target_transform': 'standardise'},

    # Approximate Gaussian process, for large scale data
    # "approxgp": {
                 # 'target_transform': 'rank',
                 # 'kern': 'matern52',
                 # 'lenscale': [1000.] * 87,
                 # 'lenscale': 1000.,
                 # 'nbases': 50},

    # Support vector machine (regressor)
    # "svr": {'gamma': 1. / 300, 'epsilon': 0.05},
    "svr": {'target_transform': 'standardise'},

    # Random forest regressor
    # "randomforest": {'n_estimators': 100},

    # ARD Linear regression
    # "ardregression": {},

    # Kernel ridge regression
    # 'kernelridge': {'kernel': 'rbf'},

    # Decision tree regressor
    # 'decisiontree': {},

    # Extra tree regressor
    # 'extratree': {},
}

#
# Prediction settings
#

# Name of the prediction algorithm
algorithm = 'svr'
# algorithm = 'bayesreg'
# algorithm = 'approxgp'
# algorithm = 'randomforest'

# Quantiles
quantiles = 0.95


#
# Visualisation/Geotiff settings
#

# Make the image RGB?
makergbtif = True

