# vi:syntax=python

from os import path


#
# Path Settings
#

# As this is set now, it assumes a folder structure like the following:
# ~/data/GA-cover   << location of data (all tif and shp files)
# ~/data/GA-cover/processed     << location of all output files
# ~/data/GA-cover/soilcrossvalindices.hdf5   << cross val hdf5 file from us

# please change the following paths to suit your needs

# Location of data
data_dir = path.join(path.expanduser("~"), "data/Murray_datasets")
# data_dir = path.join(path.expanduser("~"), "data/Murray-small")

# Location of outputs
output_dir = "."

# Shape file with target variable info
# target_file = "Targets_V_final_inside.shp"
# target_file = "Targets_shallow_filtered.shp"
target_file = "Targets_V6_reduced_cols.shp"

# Target variable name (in shape file)
target_var = "depth"
# other_fields = ["censored"]
# field_parsers = [lambda f: True if f == 'no' else False]

export_targets = True

cross_validate = True

folds = 5


#
# Feature settings
#

# Allows deternministic cross-val. Set to None for a random seed
crossval_seed = 1

# Automatically detect integer-valued files and use one-hot encoding?
onehot = False

# Patch size to extract around targets (0 = 1x1 pixel, 1 = 3x3 pixels etc)
patchsize = 0

# Impute missing values?
impute = True

# Transform the data? options are {whiten, standardise, centre, None}
transform = 'standardise'

# Fraction of dimensions to keep *if* whitening
pca_frac = 0.8

# Estimate the relative importance of each feature
rank_features = False


#
# Algorithm settings
#

# Iterate through this dictionary of algorithm name and arguments:
algdict = {

    # Bayesian linear regression
    # "bayesreg": {'target_transform': 'rank'}

    # Approximate Gaussian process, for large scale data
    # "sgdapproxgp": {
    #              'target_transform': 'rank',
    #              'kern': 'matern52',
    #              'nbases': 50,
    #              'maxiter': 3000},

    "depthregress": {
                 'kern': 'matern52',
                 'ard': True,
                 'lenscale': 1000.,
                 'nbases': 100,
                 'maxiter': 10000,
                 'falloff': 0.1,
                 'beta1': 0.3,
                 'beta2': 0.5},
    
    # Support vector machine (regressor)
    # "svr": {'gamma': 1. / 300, 'epsilon': 0.05},
    # "svr": {'target_transform': 'log'},

    # Random forest regressor
    # "randomforest": {'target_transform': 'log', 'n_estimators': 50},
}

#
# Prediction settings
#

# How much data to keep in memory at a time
memory_fraction = 1./40

# Name of the prediction algorithm
# algorithm = 'svr'
# algorithm = 'bayesreg'
# algorithm = 'approxgp'
# algorithm = 'sgdapproxgp'
algorithm = 'depthregress'
# algorithm = 'randomforest'

# Quantiles
quantiles = 0.95
